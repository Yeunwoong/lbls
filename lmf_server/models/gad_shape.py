# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from lmf_server.models.base_model_ import Model
from lmf_server.models.supported_gad_shapes import SupportedGADShapes
from lmf_server import util

from lmf_server.models.supported_gad_shapes import SupportedGADShapes  # noqa: E501

class GADShape(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shape=None):  # noqa: E501
        """GADShape - a model defined in OpenAPI

        :param shape: The shape of this GADShape.  # noqa: E501
        :type shape: SupportedGADShapes
        """
        self.openapi_types = {
            'shape': SupportedGADShapes
        }

        self.attribute_map = {
            'shape': 'shape'
        }

        self._shape = shape

    @classmethod
    def from_dict(cls, dikt) -> 'GADShape':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GADShape of this GADShape.  # noqa: E501
        :rtype: GADShape
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shape(self):
        """Gets the shape of this GADShape.


        :return: The shape of this GADShape.
        :rtype: SupportedGADShapes
        """
        return self._shape

    @shape.setter
    def shape(self, shape):
        """Sets the shape of this GADShape.


        :param shape: The shape of this GADShape.
        :type shape: SupportedGADShapes
        """
        if shape is None:
            raise ValueError("Invalid value for `shape`, must not be `None`")  # noqa: E501

        self._shape = shape
