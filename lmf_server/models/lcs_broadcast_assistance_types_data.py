# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from lmf_server.models.base_model_ import Model
from lmf_server import util


class LcsBroadcastAssistanceTypesData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_assistance_type=None):  # noqa: E501
        """LcsBroadcastAssistanceTypesData - a model defined in OpenAPI

        :param location_assistance_type: The location_assistance_type of this LcsBroadcastAssistanceTypesData.  # noqa: E501
        :type location_assistance_type: file
        """
        self.openapi_types = {
            'location_assistance_type': str
        }

        self.attribute_map = {
            'location_assistance_type': 'locationAssistanceType'
        }

        self._location_assistance_type = location_assistance_type

    @classmethod
    def from_dict(cls, dikt) -> 'LcsBroadcastAssistanceTypesData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LcsBroadcastAssistanceTypesData of this LcsBroadcastAssistanceTypesData.  # noqa: E501
        :rtype: LcsBroadcastAssistanceTypesData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_assistance_type(self):
        """Gets the location_assistance_type of this LcsBroadcastAssistanceTypesData.

        string with format 'binary' as defined in OpenAPI.  # noqa: E501

        :return: The location_assistance_type of this LcsBroadcastAssistanceTypesData.
        :rtype: file
        """
        return self._location_assistance_type

    @location_assistance_type.setter
    def location_assistance_type(self, location_assistance_type):
        """Sets the location_assistance_type of this LcsBroadcastAssistanceTypesData.

        string with format 'binary' as defined in OpenAPI.  # noqa: E501

        :param location_assistance_type: The location_assistance_type of this LcsBroadcastAssistanceTypesData.
        :type location_assistance_type: file
        """
        #if location_assistance_type is None:
        #    raise ValueError("Invalid value for `location_assistance_type`, must not be `None`")  # noqa: E501

        self._location_assistance_type = location_assistance_type
